Здесь представлено описание задач по дисциплине объектно-ориентированное программирование.

Приведу описание в виде глав, в каждой из которых описана отдельная задача.
Названием для глав будет служить имя файла с решенной задачей.

pr1-1t3.c
=========

Задача
Программа демонстрирует работу оператора цикла.
Вычисление суммы натуральных чисел. Вводится натуральное n. Вычисляется сумма натуральных чисел от 1 до n (включительно).
Проверить значение n на допустимость.

Входные данные
Целочисленное значение n в десятичном формате.

Выходные данные
Вывод рез-та в сл. виде
Number of digits: кол-во цифр


pr1-1t4.c (pr1-1t4-long.c)
=========

Задача
Программа демонстрирует действие условного оператора и построение логического выражения.
Написать программу, проверяющую принадлежит ли введенный символ англ алфавиту.
Если да, то проверить является ли он гласной/согласной буквой.

Входные данные
Символьные значения

Выходные данные
Если введенный символ гласный, то вывести "vowel" иначе вывести "consonant".
Если символ не является буквой англ алфавита вывести "Not letter".

pr1-1t5.c
=========

Задача
Вывести пирамиду (треугольник) из чисел от 1 до 9.

Входные данные
Целое число N

Выходные данные
Пирамида из натуральных чисел высоты N. Первое число в первой позиции выводится без пробелов,
остальные разделены пробелом.
Если введено недопустимое N вывести на экран N is wrong:_Значение N
Пример:
1
1 2
1 2 3
1 2 3 4
1 2 3 4 5


pr1-2t1.c
=========

Задача
Создать объект треугольник, который содержит длины сторон треугольника. Длины сторон определяются в момент конструирования объекта.
Объект вычисляет пер-р и площадь треугольника.
Написать объект треугольник который выводит пер-р и площадь треуголтника.

Входные данные
Три целых числа разделенных пробелами.

Выходные данные
P = пер-р
S = площадь

pr1-2t1.c
=========

Задача

Написать программу, которая создает объект «треугольник» и выводит периметр и площадь.
Входные данные

Три целых числа разделенных пробелом.
Выходные данные

P = периметр
S = площадь

pr1-2t2.c
==========

Задача

Создать объект, который обрабатывает массив целых чисел не более 10 элементов. Количество элементов определяются в момент конструирования объекта. Объект обладает следующей функциональностью:
- считывает элементы массива;
- выводит элементы массива;
- разворачивает последовательность элементов массива.
Написать программу, которая:
1.	Создает объект и в конструкторе считывает количество элементов массива;
2.	Считывает элементы массива;
3.	Выводит значения элементов массива согласно исходной последовательности;
4.	Разворачивает элементы массива;
5.	Выводит значения элементов массива согласно новому их порядку следования.
Входные данные

Первая строка:
целое число в десятичном формате.
Вторая строка:
последовательность целых чисел в десятичном формате разделенных пробелом.
Выходные данные

Первая строка:
N = количество элементов
Вторая строка (исходный порядок следования элементов):
Значения элементов массива, значение каждого элемента занимает 5 по-зиции.
Третья строка (порядок следования элементов после разворота):
Значения элементов массива, значение каждого элемента занимает 5 по-зиции.

pr1-2t3.c
==========

Задача

Создать объект, который обрабатывает переменную целого типа максимальной длины.
У объекта есть закрытое свойство n целого типа максимальной длины.
Объект обладает следующей функциональностью:
- определяет значение свойства n;
- вычисляет количество цифр значения свойства n;
- возвращает количество цифр значения свойства n.
Написать программу, которая:
1.	Создает объект.
2.	Вводит значение переменной целого типа.
3.	Определяет значение свойства n по значению переменной целого типа.
4.	Вычисляет количество цифр свойства n.
5.	Выводит значение свойства n.
6.	Выводит количество цифр значения свойства n.
Входные данные

Первая строка:
Целое число в десятичном формате.
Выходные данные

Первая строка:
n = значение свойства n
Вторая строка:
N = количество цифр свойства n


pr1-2t4.c
==========

Задача

Создать объект, который вычисляет значение целочисленного арифметического выражения, состоящего из трех последовательных операции. Операция деления заменена на операцию вычисления целочисленного остатка.
Объект обладает следующей функциональностью:
- выполняет первую операцию выражения, в качестве параметров передается первый целочисленный параметр, символ операции (+,-,*,%), второй целочисленный параметр;
- вычисляет вторую и далее операцию, в качестве параметров передается символ операции (+,-,*,%), второй целочисленный параметр;
- возвращает значение вычисленного выражения (значение можно получить после выполнения трех операции).
Написать программу, которая:
1.	Создает объект.
2.	Вводит значения аргументов для первой операции.
3.	Выполняет первую операцию.
4.	Вводит значение аргументов для второй операции.
5.	Выполняет вторую операцию.
6.	Вводит значение аргументов для третьей операции.
7.	Выполняет третью операцию.
8.	Выводит результат.
Входные данные

Первая строка:
целое число в десятичном формате˽символ операции˽целое число в десятичном формате
Вторая строка:
символ операции˽целое число в десятичном формате
Третья строка:
символ операции˽целое число в десятичном формате
Выходные данные

Первая строка, с первой позиции: значение выражения


pr3-2t4_1.c
==========

Задача

Создать объект, который сообщает об отработке конструктора и деструктора.
У объекта нет свойств и функциональности.
Написать программу, которая:
1.	Создает объект.

Входные данные
Отсутствует.

Выходные данные
Первая строка, с первой позиции:
Constructor
Вторая строка, с первой позиции:
Destructor

pr3-2t5_1.c
=========

Задача

Создать объект, который вычисляет значение целочисленного арифметического выражения, состоящего из трех последовательных операции. Опе-рация деления заменена на операцию вычисления целочисленного остатка.
Объект обладает следующей функциональностью:
- выполняет первую операцию выражения, в качестве параметров передается первый целочисленный параметр, символ операции (+,-,*,%), второй целочисленный параметр;
- вычисляет вторую и далее операцию, в качестве параметров передается символ операции (+,-,*,%), второй целочисленный параметр;
- возвращает значение вычисленного выражения (значение можно получить после выполнения трех операции).
Написать программу, которая обязательно вводит значения и выполняет первую операцию. Далее, в цикле осуществляет ввод очередной операции и значения второго аргумента. Если на месте операции введен символ «С», то программа завершает работу, иначе выполняет очередную операцию и выводит результат каждой третьей операции.
Входные данные

Первая строка:
целое число в десятичном формате˽символ операции˽целое число в десятичном формате
Последующие строки:
символ операции˽целое число в десятичном формате

В последней строке:
С

Выходные данные

Первая строка, с первой позиции:
 значение выражения
Последующие строки, с первой позиции:
значение выражения

pr3-2t15_1.c
===========
Задача

Создать объект первого типа, у которого одно целочисленное свойство. Значение данного свойства определяется посредством параметризированного конструктора. Создать объект второго типа, у которого две целочисленные свойства. Значение данных свойств определяется посредством метода объекта. Реализовать дружественную функцию, которая находит максимальное значение полей объекта первого типа и полей объекта второго типа.


Написать программу:


1. Вводит значение для поля объекта первого типа.


2. Создает объект первого типа.


3. Вводит значения полей для полей объекта второго типа.


4. Создает объект второго типа.


5. Определяет значения полей объекта второго типа.


6. Определяет максимальное значение полей, созданных двух объектов разного типа посредством дружественной функции.


7. Выводит полученный результат.

Входные данные

Первая строка:
целое число в десятичном формате
Вторая строка:
целое число в десятичном формате˽целое число в десятичном фор-мате
Выходные данные

Первая строка, с первой позиции:
max = целочисленное значение в десятеричном формате

pr3-2t17_1.c
==========
Задача

Разработать объект, который обладает следующей функциональностью:
-	В конструкторе вводит количество элементов целочисленного массива.
-	В конструкторе создает целочисленный массив заданным количеством элементов.
-	Конструкторе определяет значения элементов массива. Значение каждого элемента равно квадрату индекса элемента.
-	Выводит значения элементов массива в обратном порядке.

Необходимые свойства объекта определяется разработчиком.
Количество элементов массива принадлежит интервалу от 5 до 20.

Написать программу:
1.	Создает объект посредством оператора new.
2.	Выводит значения элементов массива в обратном порядке.
3.	Удаляет объект посредством оператора delete.
Входные данные

Первая строка (количество элементов массива):
целое число в десятичном формате
Выходные данные

Первая строка, с первой позиции:
целочисленные значения элементов массива в десятеричном формате, каждое значение занимает 5 позиций

pr4t1_1.c
=========
Задача


Для организации иерархического построения объектов необходимо разработать базовый класс, который содержит функционал и свойства для построения иерархии объектов. В последующем, в приложениях использовать этот класс как базовый для всех создаваемых классов. Это позволит включать любой объект в состав дерева иерархии объектов.





Создать базовый класс со следующими элементами:


Свойства:


-       наименование объекта (строкового типа);


-       указатель на головной объект для текущего объекта (для корневого объекта значение указателя равно 0);


-       список указателей на объекты подчиненных к текущему объекту в дереве иерархии.


Функционал:


-       параметризированный конструктор с параметром указателя на головной объект в дереве иерархии;


-       параметризированный конструктор с параметром указателя на головной объект в дереве иерархии и наименованием объекта;


-       метод задания имени объекта;


-       метод получения имени объекта;


-       метод вывода наименований объектов в дереве иерархии слева направо и сверху вниз.


Написать программу, которая последовательно строит дерево иерархии объектов, слева направо и сверху вниз. Переход на новый уровень происходит от правого (последнего) объекта предыдущего уровня. Для построения дерева использовать объекты двух производных классов, наследуемых от базового. Каждый объект имеет уникальное имя.


Построчно, по уровням вывести наименования объектов построенного иерархического дерева.

Входные данные

Первая строка:
имя корневого объекта
Создается корневой объект.
Вторая строка и последующие строки:
имя головного объекта имя подчиненного объекта
Создается подчиненный объект и добавляется в иерархическое дерево.
Если имя головного объекта равняется имени подчиненного объекта, то новый объект не создается и построение дерева объектов завершается.
Пример ввода
Object_root
Object_root Object_1
Object_root Object_2
Object_root Object_3
Object_3 Object_4
Object_3 Object_5
Object_6 Object_6

Построенное дерево объектов
Object_root
	Object_1
	Object_2
	Object_3
		Object_4
		Object_5
Выходные данные

Первая строка:
имя корневого объекта
Вторая строка и последующие строки имена головного и подчиненных объектов очередного уровня разделенных двумя пробелами.
имя головного объекта  имя подчиненного объекта[[  имя подчиненного объекта] …….]
Пример вывода
Object_root
Object_root  Object_1  Object_2  Object_3
Object_3  Object_4  Object_5

pt3_2t9_1.c
==========
Задача

Создать класс для объекта стек. Стек хранит целые числа. Имеет характеристики: наименование (строка, не более 10 символов) и размер (целое). Размер стека больше или равно 1. Функционал стека:
-    добавить элемент и вернуть признак успеха (логическое);
-    извлечь элемент и вернуть признак успеха (логическое);
-    получить имя стека (строка);
-    получить размер стека (целое);
-    получить текущее количество элементов в стеке (целое).
В классе определить параметризированный конструктор, которому передается имя стека и размер. При переполнении стека очередной элемент не добавлять и определяется соответствующий признак успеха.
В основной программе реализовать алгоритм:
1.    Ввести имя и размер для первого стека.
2.    Создать объект первого стека.
3.    Ввести имя и размер для второго стека.
4.    Создать объект второго стека.
5.    В цикле:
5.1.    Считывать очередное значение элемента.
5.2.    Добавлять элементы в оба стека.
5.3.    При переполнении одного из них, завершить цикл.
6.    Построчно вывести содержимое стеков.


Входные данные

Первая строка:
имя стека 1 размер стека
Вторая строка:
имя стека 2 размер стека
Третья строка:
Последовательность целых чисел, разделенных пробелами, в количестве не менее чем размер одного из стеков + 1.
Выходные данные

Первая строка:
имя стека 1 размер
Вторая строка:
имя стека 2 размер
Третья строка:
имя стека 1   имя стека 2
Каждое имя стека в третьей строке занимает поле длины 15 позиции и прижата к левому краю.
Четвертая строка и далее построчно, вывести все элементы стеков:
значение элемента стека 1    значение элемента стека 2
Вывод значений элементов стеков производиться последовательным извлечением. Каждое значение занимает поле из 15 позиции и прижата к правому краю.
